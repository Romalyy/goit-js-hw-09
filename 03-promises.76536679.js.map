{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,C,SAAEL,E,MAAUC,GAC1B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACzBN,EACFK,EAAQF,GAERG,EAAOH,MAKAI,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACzC,MAAMC,EAAYH,OAAOH,EAAEI,cAAcG,KAAKF,OACxCG,EAAcL,OAAOH,EAAEI,cAAcK,OAAOJ,OAElD,IAAK,IAAIK,EAAW,EAAGA,GAAYF,EAAaE,GAAY,EAC1DvB,EAAcuB,EAAUR,GACrBS,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,YAAW,KACT3B,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAW,CAAI0B,SAAS,MAC5E1B,MAEJ2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBuB,YAAW,KACT3B,EAAA4B,OAAOI,QAAQ,sBAAoB7B,QAAeC,MAAW,CAAI0B,SAAS,MACzE1B,MAEPa,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = { position, delay };\n    return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promise);\n    } else {\n      reject(promise);\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const countStep = Number(e.currentTarget.step.value);\n  const amountValue = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n    delay += countStep;\n  }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","countStep","step","amountValue","amount","position1","then","setTimeout","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.76536679.js.map"}